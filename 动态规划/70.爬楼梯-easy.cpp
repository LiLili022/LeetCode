/*动态规划

假设你正在爬楼梯。需要 n 阶你才能到达楼顶。

每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？


1.开始
冲后往前推，最后一次要么是1，要么是2；

2.推导公式
如果是 1，则情况为 f(n-1);
如果是 2,  则情况为 f(n-2);
所以 f(x) = f(n-1) + f(n-2)

3.确定 确定值(初始情况)
f(0) = 1
f(1) = 1

4.带入公式
f(2) = f(1) + f(0) = 2
f(3) = f(2) + f(1) = 3
*/

class Solution {
public:
    int climbStairs(int n) {
        int p = 0, q = 0, r = 1;
        for (int i = 0; i < n; i++) {
            p = q;
            q = r;
            r = p + q;
        }
        return r;
    }
};